name: Build & Release Zsh

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [x86_64, arm64]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install build tools (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl tar xz pkg-config
          if [ "${{ matrix.arch }}" = "arm64" ]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu
          fi

      - name: Install build tools (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install autoconf make pkg-config curl xz

      - name: Configure & build Zsh
        run: |
          ZSH_VER=5.9
          OUTDIR=out/${{ matrix.os }}-${{ matrix.arch }}
          mkdir -p "$OUTDIR"
          
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            export CFLAGS="-O2 -arch ${{ matrix.arch }}"
            export LDFLAGS="-arch ${{ matrix.arch }}"
            curl -fsSL https://www.zsh.org/pub/zsh-${ZSH_VER}.tar.xz | tar -xJ
            cd zsh-${ZSH_VER}
            ./Util/preconfig || true
            ./configure --prefix="$(pwd)/../$OUTDIR"
          else
            # Linux static or cross-compile
            if [ "${{ matrix.arch }}" = "arm64" ]; then
              export CC=aarch64-linux-gnu-gcc
              HOST="--host=aarch64-linux-gnu"
            else
              HOST=""
            fi
            export CFLAGS="-static -O2 -march=native"
            export LDFLAGS="-static"
            curl -fsSL https://www.zsh.org/pub/zsh-${ZSH_VER}.tar.xz | tar -xJ
            cd zsh-${ZSH_VER}
            ./configu
