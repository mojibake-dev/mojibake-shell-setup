name: Build & Release Zsh

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
          - os: macos-latest
            arch: x86_64
          - os: macos-latest
            arch: arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Install build tools + ncurses.dev
      - name: Install build tools (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            curl \
            tar \
            xz-utils \
            pkg-config \
            libncurses-dev

      - name: Install build tools (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install autoconf make pkg-config curl xz

      # Fetch, configure & build Zsh
      - name: Configure & build Zsh
        run: |
          ZSH_VER=5.9
          OUTDIR=out/${{ matrix.os }}-${{ matrix.arch }}
          mkdir -p "$OUTDIR"

          case "${{ matrix.os }}" in
            ubuntu-latest)
              export CFLAGS="-O2 -march=native"
              export LDFLAGS=""
              HOST=""
              ;;
            macos-latest)
              export CFLAGS="-O2 -arch ${{ matrix.arch }}"
              export LDFLAGS="-arch ${{ matrix.arch }}"
              HOST=""
              ;;
            *)
              echo "Unsupported OS: ${{ matrix.os }}" && exit 1
              ;;
          esac

          curl -fsSL https://www.zsh.org/pub/zsh-${ZSH_VER}.tar.xz | tar -xJ
          cd zsh-${ZSH_VER}

          [[ "${{ matrix.os }}" = "macos-latest" ]] && ./Util/preconfig || true

          ./configure $HOST \
            --without-tcsetpgrp \
            --with-term-lib=ncurses \
            --prefix="$(pwd)/../$OUTDIR"

          make -j"$(nproc || sysctl -n hw.ncpu)"
          make install
          cd ..

      # Bundle every repo file + the new zsh binary
      - name: Package (all tracked files + zsh)
        run: |
          git ls-files > filelist.txt
          echo "out/${{ matrix.os }}-${{ matrix.arch }}/bin/zsh" >> filelist.txt
          zip -r zsh-${{ matrix.os }}-${{ matrix.arch }}.zip -@ < filelist.txt

      # Upload
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: zsh-${{ matrix.os }}-${{ matrix.arch }}
          path: zsh-${{ matrix.os }}-${{ matrix.arch }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release & upload bundles
        uses: ncipollo/release-action@v1
        with:
          tag: main-build-${{ github.run_number }}
          artifacts: artifacts/*.zip
