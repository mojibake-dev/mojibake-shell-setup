name: Build & Release Zsh

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [x86_64, arm64]
    outputs:
      artifact-name: ${{ matrix.os }}-${{ matrix.arch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install build tools
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl tar xz pkg-config
          if [ "${{ matrix.arch }}" = "arm64" ]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu
          fi
      - name: Install build tools (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install autoconf make pkg-config curl xz

      - name: Configure & build Zsh
        run: |
          ZSH_VER=5.9
          mkdir -p out/$OS-$ARCH
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            # macOS: cross-arch via -arch flags
            export CFLAGS="-O2 -arch ${{ matrix.arch }}"
            export LDFLAGS="-arch ${{ matrix.arch }}"
            curl -fsSL https://www.zsh.org/pub/zsh-${ZSH_VER}.tar.xz | tar -xJ
            cd zsh-${ZSH_VER}
            ./Util/preconfig || true
            ./configure --prefix="$(pwd)/../out/${{ matrix.os }}-${{ matrix.arch }}"
          else
            # Linux: static build, cross-compile for arm64 if needed
            if [ "${{ matrix.arch }}" = "arm64" ]; then
              export CC=aarch64-linux-gnu-gcc
              export CFLAGS="-static -O2 -march=native"
              export LDFLAGS="-static"
              HOST=--host=aarch64-linux-gnu
            else
              export CFLAGS="-static -O2 -march=native"
              export LDFLAGS="-static"
              HOST=
            fi
            curl -fsSL https://www.zsh.org/pub/zsh-${ZSH_VER}.tar.xz | tar -xJ
            cd zsh-${ZSH_VER}
            ./configure $HOST --prefix="$(pwd)/../out/${{ matrix.os }}-${{ matrix.arch }}"
          fi
          make -j"$(nproc || sysctl -n hw.ncpu)"
          make install
      - name: Package
        run: |
          cd out
          zip -r zsh-${{ matrix.os }}-${{ matrix.arch }}.zip ${{ matrix.os }}-${{ matrix.arch }}/bin/zsh

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: zsh-${{ matrix.os }}-${{ matrix.arch }}
          path: out/zsh-${{ matrix.os }}-${{ matrix.arch }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create GitHub Release & upload zsh binaries
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          artifacts: artifacts/*.zip
